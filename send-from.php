<?php 
/*
Plugin Name: Send From
Version: 1.0
Plugin URI: 
Description: Changes the From line on any email sent from the server.
Author: Ben Buddle
Author URI: http://www.mahoskye.com/
*/

/**
 * @author Ben Buddle
 * @copyright Ben Buddle 2009 All Rights Reserved
 * @license This code is released under GNU GENERAL PUBLIC LICENSE Version 3.0 <http://www.gnu.org/licenses/gpl.html>
 */

/**
 * 
 * CHANGELOG
 * 
 * 1.0 - Send Test Working and showing proper messages
 * 0.9 - Send Test Implemented and working, showing 'Settings Saved.'
 * 0.8 - Working without Send Test option
 * 0.7 - Added Options Page
 * 0.5 - Revision / working draft
 * 0.1 - Initial approact to content
 */

// DEFAULT-SETTINGS-----------------------------------------------------------------

// On activation do defaults
register_activation_hook(__FILE__,'smf_activation');
// Associate 'set-mail-from' with bits available to be translated
load_plugin_textdomain('send-from', false, dirname(plugin_basename(__FILE)).'/langs');

if(!function_exists('smf_activation')):
 function smf_activation(){
 	// Get the domain name and give a default email address
	$sitename = strtolower($_SERVER['SERVER_NAME']);
	if(substr($sitename,0,4)=='www.'){
		$sitename = substr($sitename, 4);
	}
	$default_address = 'wordpress@'.$sitename;
	
	// Define Default Options
	$smf_options = array(
		'mail_from'			=> 'noreply@mahoskye.com',//$default_address, //had to add a valid email
		'mail_from_name'	=> 'WordPress'
	);
	
	// add_option('smf_options',$smf_options); // replace below with this to prevent default values coming back
	$existing_options = get_option('smf_options');
	if(!is_array($existing_options)){
		// Push to DB
		add_option('smf_options',$smf_options);
	}
 }
endif;

// FILTERS--------------------------------------------------------------------------

// Filter Functions for setting the From Name and Address
if(!function_exists('smf_mail_from')):
 function smf_mail_from(){
	$smf_options = get_option('smf_options');
	$from_address = $smf_options['mail_from'];
	return $from_address;
 }
endif;
if(!function_exists('smf_mail_from_name')):
 function smf_mail_from_name(){
	$smf_options = get_option('smf_options');
	$from_name = $smf_options['mail_from_name'];
	return $from_name;
 }
endif;

// Replaces the From Name and Address with custom info
add_filter('wp_mail_from', 'smf_mail_from');
add_filter('wp_mail_from_name', 'smf_mail_from_name');

// ADMIN-PANEL----------------------------------------------------------------------

add_action('admin_menu', 'smf_menus');

// Setup the menu item(s)
if(!function_exists('smf_menus')):
 function smf_menus(){
 	add_submenu_page(
 		'plugins.php',										//Parent Category
 		__('Send From', 'send-from'), 						//Page Title
 		__('&raquo;Send From','send-from'),					//Link Title
 		'manage_options',									//Needs to be capable of doing
 		__FILE__,											//File
 		'smf_options_page'									//Function to run
 	);
 }
endif;

// Display the options page
if(!function_exists('smf_options_page')):
 function smf_options_page(){
?>

<div class="wrap">
	<h2><?php _e('Send From', 'send-from');?></h2>

	<?php
	
	// When send test is clicked, attempt to send an email 
	if(isset($_POST['send_test'])){
		$test_message = $_POST['smf_send_test_opts'];
		$test_message = trim($test_message['send_to']);
		
		if($test_message != ''){
					
				// Set up the mail variables
				$to = $test_message;
				$subject = 'Send From: ' . __('Test mail to ', 'send-from') . $to;
				$message = __('This is a test email generated by the Send From WordPress plugin.', 'send-from');

				// Start output buffering to grab smtp debugging output
				ob_start();
				
				// Send the test mail
				$result = wp_mail($to,$subject,$message);
				
				// Grab the smtp debugging output
				$smf_debug = ob_get_clean();
				
				// Display Message Sent
?>	<div id="send_test_message" class="updated fade"><p><strong><?php 
		_e('Test Message has been sent.');
?></strong></p></div>
	<?php
		} else { 
			// Display an error message because the field was not set
?>	<div id="send_test_message" class="error fade"><p><strong><?php 
		_e('There was no one to send the message to, please fill out the Send Test To field and try again.');
?></strong></p></div>
	<?php
		}
	}
	
	?>
<form method="post" action="options.php">
    <?php settings_fields('smf_settings_group'); ?>
	<?php do_settings_sections('smf_settings'); ?>
	<p class="submit"><input type="submit" name="Submit" value="<?php _e('Updates Options &raquo;', 'send-from');?>" /></p>
</form>

<form method="post">
	<?php settings_fields('smf_send_test_group'); ?>
	<?php do_settings_sections('smf_send_test'); ?>
	<p class="submit"><input type="submit" name="send_test" value="<?php _e('Send Test &raquo;', 'send-from');?>" /></p>
</form>

</div>

<?php 
 }
endif;

// Begin admin settings
add_action('admin_init', 'smf_admin_init');

// Initialize the settings
if(!function_exists('smf_admin_init')):
 function smf_admin_init(){
	register_setting('smf_settings_group', 'smf_options', 'smf_options_validation');
	add_settings_section('smf_settings_main', '', 'smf_settings_main_text','smf_settings');
	add_settings_field('smf_settings_from_name', __('From Name: ','send-from'), 'smf_settings_from_name_input', 'smf_settings', 'smf_settings_main');
	add_settings_field('smf_settings_from', __('From Email: ','send-from'), 'smf_settings_from_input', 'smf_settings', 'smf_settings_main');
	
	register_setting('smf_send_test_group', 'smf_send_test_opts', 'smf_do_send_test');
	add_settings_section('smf_send_test_main',  __('Send a test message','send-from'),'smf_send_test_main_text','smf_send_test');
	add_settings_field('smf_send_test_to', __('Send Test To: ', 'send-from'), 'smf_send_test_to_input', 'smf_send_test', 'smf_send_test_main');
 }
endif;

// Main Section Text
if(!function_exists('smf_settings_main_text')):
 function smf_settings_main_text(){
	_e('<p>Here you have the opportunity to configure the From Name and Email that the server sends from. You will need to use a valid email account from your server otherwise this <strong>WILL NOT WORK</strong>. If left blank this will use the default name of <code>WordPress</code> and the default address of <code>wordpress@domain</code>.</p>','send-from');
 }
endif;

// From Address Input
if(!function_exists('smf_settings_from_input')):
 function smf_settings_from_input() {
	$options = get_option('smf_options');
	echo "<input id='smf_settings_from' name='smf_options[mail_from]' size='40' type='text' value='{$options['mail_from']}' />";
 }
endif;

// From Name Input
if(!function_exists('smf_settings_from_name_input')):
 function smf_settings_from_name_input() {
	$options = get_option('smf_options');
	echo "<input id='smf_settings_from_name' name='smf_options[mail_from_name]' size='40' type='text' value='{$options['mail_from_name']}' />";
 }
endif;

// Validation of inputs, will reset to generic values if blank
if(!function_exists('smf_options_validation')):
 function smf_options_validation($input){
	$newinput['mail_from'] = trim($input['mail_from']);
	$newinput['mail_from_name'] = trim($input['mail_from_name']);
	
	if($newinput['mail_from'] == ''){
	 	// Get the domain name and give a default email address
		$sitename = strtolower($_SERVER['SERVER_NAME']);
		if(substr($sitename,0,4)=='www.'){
			$sitename = substr($sitename, 4);
		}
		$newinput['mail_from'] = 'wordpress@'.$sitename;
	}
	if($newinput['mail_from_name'] == ''){
		$newinput['mail_from_name'] = 'WordPress';
	}
	
	return $newinput;
 }
endif;

// Send Text Section Text
if(!function_exists('smf_send_test_main_text')):
 function smf_send_test_main_text(){
	_e('<p>Enter an email address to send a test message from the server.</p>','send-from');
 }
endif;

// Send To Input
if(!function_exists('smf_send_test_to_input')):
 function smf_send_test_to_input() {
	$options = get_option('smf_options');
	echo "<input id='smf_send_test_to_input' name='smf_send_test_opts[send_to]' size='40' type='text' value='' />";
 }
endif;

// Validation for send test input that adds to url
if(!function_exists('smf_do_send_test')):
 function smf_do_send_test($input){
 	if($input['send_to'] == ''){
	 	$input_array = array(
	 		'send_test' => 'false'
	 	);
 		return $input_array;
 	}
 	$newinput = htmlspecialchars($input['send_to']);
 	$input_array = array(
 		'send_test' => 'true',
 		'send_to'	=> $newinput
 	);
	return $input_array;
 }
endif;
?>